/*
 * Servos
 *
 * Copyright 2013 <b@Zi.iS>
 * License CC BY 3.0
 */

include <../main.scad>;

//servo(AS_17[0], AS_17[1], HORN);

/*
SERVO = [
	[
		[mount, body, axis, body, mount, edge], //length
		[mount, mount, edge], //width
		[mount bottom, mount top, body top, axel bottom, axel top] //height
	],
	[
		mount diamiter,
		axel diamiter
	]
]*/

BLS_152 = [
	[
		[(54.5-49.5)/2, 34.65-29.9, 29.9, 10.1, 14.85 - 10.1, (54.5-49.5)/2],
		[5, 10, 5],
		[26.8, 2.5, 36.8 - 26.8 - 2.5, 1, 16+26.8-36.8-1]
	],
	[4.2, 5.8]
];

RCX_9650BB = [
	[
		[(48.5-42.4)/2,(42.4-36)/2, 28, 8 /*guess*/, (42.4-36)/2, (48.5-42.4)/2],
		[(15.3-7.4)/2, 7.4, (15.3-7.4)/2],
		[27, 21.8-19.5, 3, 32.9-21.8-3-3, 3],
	],
	[4.2, 5.8]
];

HS_645MG = [
	[
		[2.5,6.4-2.5,30.7, 40.6-30.7, 6.4-2.5,2.5],
		[(19.8-10.2)/2, 10.2, (19.8-10.2)/2],
		[27, 2, 35.8-2-27, 4, 3.2], 
	],
	[4.2, 5.8]
];

HS_485HB = [
	[
		[2.5,6.55-2.5,30, 40-30,6.55-2.5,2.5],
		[(19.82-10.2)/2, 10.2, (19.82-10.2)/2],
		[28, 2, 34.8-2-28, 5, 3.2], 
	],
	[4.2, 5.8]
];

AS_17 = [
	[
		[3.8,8-3.8,38.5-8, 8,8-3.8,3.8],
		[(18.4-10)/2, 10, (18.4-10)/2],
		[26, 2.5, 1, 36.5-2.5-26, 3.8], 
	],
	[5, 5.8]
];

HORN = [
	[31/2, 25/2, 19/2, 13/2],
	[1.7, 7, 11],
	[3, 6.2-3-2, 2]
];

module servo(
	s,
	d=[
		4.2, //mount
		5.8 //axel
	],
	h,
	id
) {
    part(id, str("Servo")) {
	color([.3,.3,.3])
	difference() {
		translate([
			-s[0][0] -s[0][1] - s[0][2],
			-(s[1][0] + s[1][1] + s[1][2])/2,
			0
		])
			cube([
				s[0][0] + s[0][1] + s[0][2] + s[0][3] + s[0][4] + s[0][5],
				s[1][0] + s[1][1] + s[1][2],
				s[2][1]
			]);
		for(x=[-s[0][1] - s[0][2], s[0][3] + s[0][4]])
			for(y=[-(s[1][0] + s[1][1] + s[1][2])/2 + s[1][0], -(s[1][0] + s[1][1] + s[1][2])/2 + s[1][0] + s[1][1]])
				translate([x, y, 0])
					e() cylinder(
						d=d[0],
						h=s[2][1]
					);
	}

	color([.3,.3,.3])
	hull() {
		translate([
			-s[0][2],
			-(s[1][0] + s[1][1] + s[1][2])/2,
			-s[2][0]
		])
			cube([
				s[0][2] + s[0][3],
				s[1][0] + s[1][1] + s[1][2],
				s[2][0] + s[2][1] + s[2][2]
			]);
		translate([
			0,
			0,
			s[2][1] + s[2][2] + s[2][3]
		])
			cylinder(
				d=d[1],
				h=.1
			);
	}

	color([.7,.7,1])
	cylinder(
		d=d[1],
		h=s[2][1] + s[2][2] + s[2][3] + s[2][4]
	);

	//horn
	translate([
		0,
		0,
		s[2][1] + s[2][2] + s[2][3] + s[2][4] + h[2][1]
	])	color([1,1,1]) {
		translate([0, 0, -h[2][0]-h[2][1]])
			cylinder(d=d[1]+1, h=h[2][0]+h[2][1]);
		for(x=[0:4])
			rotate([0, 0, 90*x])
				difference() {
					hull() { 
						cylinder(d=h[1][2], h=h[2][2]);
							translate([h[0][0], 0, 0])
								cylinder(d=h[1][1], h=h[2][2]);
					}
					for(y=h[0])
						translate([y, 0, 0])
							e() cylinder(d=h[1][0], h=h[2][2]);
				}
	}
    }
}
